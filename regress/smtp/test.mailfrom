proc init-helo {
	expect smtp ok
	writeln "HELO regress"
	expect smtp helo
}

test-case name "mailfrom.empty" {
	call init-helo
	writeln "MAIL FROM: <>"
	expect smtp ok
}

test-case name "mailfrom.at-sign" {
	call init-helo
	writeln "MAIL FROM: <@>"
	expect smtp ok
}

test-case name "mailfrom.no-at-sign" {
	call init-helo
	writeln "MAIL FROM: <a>"
	expect smtp permfail
}

test-case name "mailfrom.no-domain" {
	call init-helo
	writeln "MAIL FROM: <a@>"
	expect smtp permfail
}

test-case name "mailfrom.no-user" {
	call init-helo
	writeln "MAIL FROM: <@a>"
	expect smtp permfail
}

test-case name "mailfrom.colon-as-user" {
	call init-helo
	writeln "MAIL FROM: <:@a>"
	expect smtp permfail
}

test-case name "mailfrom.src-route" {
	call init-helo
	writeln "MAIL FROM: <whatever:a@a>"
	expect smtp ok
}

test-case name "mailfrom.src-route-no-user" {
	call init-helo
	writeln "MAIL FROM: <a:@a>"
	expect smtp permfail
}

test-case name "mailfrom.space-as-user" {
	call init-helo
	writeln "MAIL FROM: < @a>"
	expect smtp permfail
}

test-case name "mailfrom.space-as-domain" {
	call init-helo
	writeln "MAIL FROM: <a@ >"
	expect smtp permfail
}

test-case name "mailfrom.option" {
	call init-helo
	writeln "MAIL FROM: <user@domain> OPT"
	expect smtp permfail
}

test-case name "mailfrom.option-size" {
	call init-helo
	writeln "MAIL FROM: <user@domain> SIZE=3005"
	expect smtp ok
}

test-case name "mailfrom.option-7bit" {
	call init-helo
	writeln "MAIL FROM: <user@domain> BODY=7BIT"
	expect smtp ok
}

test-case name "mailfrom.option-8bitmime" {
	call init-helo
	writeln "MAIL FROM: <user@domain> BODY=8BITMIME"
	expect smtp ok
}

test-case name "mailfrom.option-8bitmime-size" {
	call init-helo
	writeln "MAIL FROM: <user@domain> BODY=8BITMIME"
	expect smtp ok
}

test-case name "mailfrom.option-auth" {
	call init-helo
	writeln "MAIL FROM: <user@domain> AUTH=WHATEVER"
	expect smtp ok
}
